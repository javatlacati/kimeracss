//check the variables in _variables.kimera.scss and _setnames.kimera.scss
@mixin since ($breakpoint) {
    @if $breakpoint==$bp-touch {
        @media screen and (min-width: $touch) {
            @content
        }
    }
    @else if $breakpoint==$bp-tablet {
        @media screen and (min-width: $tablet) {
            @content
        }
    }
    @else if $breakpoint==$bp-desktop {
        @media screen and (min-width: $desktop) {
            @content
        }
    }
    @else if $breakpoint==$bp-widescreen {
        @media screen and (min-width: $widescreen) {
            @content
        }
    }
    @else {
        @media screen and (min-width: $breakpoint) {
            @content
        }
    }
}

@mixin only ($breakpoint, $breakpoint2: $widescreen) {
    @if $breakpoint=='only-#{$bp-touch}' {
        @media screen and (min-width: 320px) and (max-width: $only-touch) {
            @content
        }
    }
    @else if $breakpoint=='only-#{$bp-tablet}' {
        @media screen and (min-width: $tablet) and (max-width: $only-tablet) {
            @content
        }
    }
    @else if $breakpoint=='only-#{$bp-desktop}' {
        @media screen and (min-width: $desktop) and (max-width: $only-desktop) {
            @content
        }
    }
    @else {
        @media screen and (min-width: $breakpoint) and (max-width: $breakpoint2) {
            @content
        }
    }
}

@mixin until ($breakpoint) {
    @if $breakpoint==$bp-touch {
        @media screen and (max-width: $touch) {
            @content
        }
    }
    @else if $breakpoint==$bp-tablet {
        @media screen and (max-width: $tablet) {
            @content
        }
    }
    @else if $breakpoint==$bp-desktop {
        @media screen and (max-width: $desktop) {
            @content
        }
    }
    @else if $breakpoint==$bp-widescreen {
        @media screen and (max-width: $widescreen) {
            @content
        }
    }
    @else {
        @media screen and (max-width: $breakpoint) {
            @content
        }
    }
}

@mixin color-picker ($class, $base-color, $number-colors: 5, $interval-color: 2) {
    .#{$class-color-picker}-#{$class} {
        background-color: $base-color;
    }
    @for $i from 1 through $number-colors {
        @if ($class=='black') or ($class=='dark') {
            .#{$class-color-picker}-#{$class}-#{$class-lighten-prefix}-#{$i} {
                background-color: lighten($base-color, ($i*$interval-color));
            }
        }
        @else if ($class=='light') or ($class=='cloud') {
            .#{$class-color-picker}-#{$class}-#{$class-darken-prefix}-#{$i} {
                background-color: darken($base-color, ($i*$interval-color));
            }
        }
        @else {
            .#{$class-color-picker}-#{$class}-#{$class-lighten-prefix}-#{$i} {
                background-color: lighten($base-color, ($i*$interval-color));
            }
            .#{$class-color-picker}-#{$class}-#{$class-darken-prefix}-#{$i} {
                background-color: darken($base-color, ($i*$interval-color));
            }
        }
    }
}

@mixin border-shadow ($color, $opacity) {
    box-shadow: inset 0 0 0 1px rgba($color, $opacity);
}